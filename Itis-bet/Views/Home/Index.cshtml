@{
    ViewData["Title"] = "S-BET";
}
@using DAL.Models.Enums
@model Dictionary<DAL.Models.Enums.Sport, Dictionary<string, List<DAL.Models.Matches>>>

<div class="section banners">
    @{
        foreach (var banner in ViewBag.Banners)
        {
            <div class="banner">
                <img src="@banner.Image" alt="">
            </div>
        }
    }
</div>
<div class="row row-30">
    <!-- Isotope Filters-->
    <div class="col-lg-12">
        <div class="matches-filters matches-filters-horizontal">
            <ul class="matches-filters-list" id="matches-filters">
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link @(ViewData["sport"].Equals("") ? "active" : "")" href="/">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-01"></span>
                        </span><span class="matches-filters-list-text">All sports</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Football") ? "active" : "")" asp-route-sport="@Sport.Football">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-07"></span>
                        </span><span class="matches-filters-list-text">Football</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Tennis") ? "active" : "")" asp-route-sport="@Sport.Tennis">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-06"></span>
                        </span><span class="matches-filters-list-text">Tennis</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Basketball") ? "active" : "")" asp-route-sport="@Sport.Basketball">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-04"></span>
                        </span><span class="matches-filters-list-text">Basketball</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Volleyball") ? "active" : "")" asp-route-sport="@Sport.Volleyball">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-09"></span>
                        </span><span class="matches-filters-list-text">Volleyball</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Badminton") ? "active" : "")" asp-route-sport="@Sport.Badminton">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-03"></span>
                        </span><span class="matches-filters-list-text">Badminton</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Baseball") ? "active" : "")" asp-route-sport="@Sport.Baseball">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-05"></span>
                        </span><span class="matches-filters-list-text">Baseball</span>
                    </a>
                </li>
                <li class="matches-filters-list-item">
                    <a class="matches-filters-list-link  @(ViewData["sport"].Equals("Cycling") ? "active" : "")" asp-route-sport="@Sport.Cycling">
                        <span class="matches-filters-list-img">
                            <span class="sprite sprite-sport-icon-10"></span>
                        </span><span class="matches-filters-list-text">Cycling</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
    <!-- Isotope Content-->
    <div class="col-lg-12">
        <div class="row isotope row-30" style="position: relative;">
            <!-- Football-->
            @{
                if (Model.Any())
                {
                    foreach (var sportTournament in Model)
                    {
                        <div class="col-lg-12">
                            <!-- Heading Component-->
                            <article class="heading-component">
                                <div class="heading-component-inner">
                                    <h5 class="heading-component-title">
                                        @sportTournament.Key
                                    </h5>
                                </div>
                            </article>


                            @foreach (var tournamentMatch in sportTournament.Value)
                            {
                                <div class="sport-table-header">
                                    <p>@tournamentMatch.Key</p>
                                </div>
                                foreach (var match in tournamentMatch.Value)
                                {
                                    <div class="sport-table">
                                        <div class="sport-table-tr">
                                            <div class="row sport-row align-items-center row-15">
                                                <div class="col-sm-2 col-md-1 col-lg-1">
                                                    <div class="sport-table-status">
                                                        <span class="sport-status-@(match.Status.Equals(MatchStatus.Active) ? "active" : "default")"></span>
                                                    </div>
                                                </div>
                                                <div class="col-sm-9 col-md-4 col-lg-3">
                                                    <div class="sport-table-title">
                                                        <div class="sport-table-title-item sport-table-title-item-left">
                                                            <span class="sport-table-title-team">@match.Team1</span>
                                                            <span class="sport-table-title-team">@match.Team2</span>
                                                        </div>
                                                        <div class="sport-table-title-item sport-table-title-item-right">
                                                            @{
                                                                string[] results = match.Result.Split(':');
                                                            }
                                                            <span class="sport-table-title-score">
                                                                <span>@results[0]</span>
                                                            </span>
                                                            <!--span.sport-table-title-team= obj.team[1][0]-->
                                                            <span class="sport-table-title-score">
                                                                <span>@results[1]</span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10 col-md-6 col-lg-7">
                                                    <div class="sport-table-wager">
                                                        @{
                                                            foreach (var bet in match.Bets)
                                                            {
                                                                <a class="sport-table-wager-button" href="#" data-toggle="modal" data-target="#sportModal" data-match="@match.Id" data-team-name="@bet.Description" data-confrontation="@match.Team1 vs @match.Team2" data-wager-count="@bet.Coef" data-score="@match.Result">
                                                                    <span>@bet.Description</span><span class="sport-table-wager-button-count">@bet.Coef</span>
                                                                </a>
                                                            }
                                                        }
                                                    </div>
                                                </div>

                                                <div class="col-sm-2 col-md-1 col-lg-1">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }

                        </div>
                    }
                }
                else
                {
                    <h3 class="text-center text-danger">No results</h3>
                }
            }
        </div>
    </div>

    @await Html.PartialAsync("_ChatPartial")

</div>
<div class="modal modal-sport fade" id="sportModal" tabindex="-1" role="dialog" aria-labelledby="sportModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sportModalTitle">Placing a bet</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span class="mdi mdi-close" aria-hidden="true"></span>
                </button>
            </div>
            <div class="modal-body">
                <p class="modal-sport-error text-danger"></p>
                <p class="modal-sport-wager-title">
                    <span class="modal-sport-wager"></span> x<span class="modal-sport-wager-count"></span>
                </p>
                <p class="modal-sport-confrontation"></p>
                <p class="modal-sport-live">
                    <span class="modal-sport-live-count"></span> <span>1X2 Live Betting</span>
                </p>
                <div class="stepper-sport">

                    <div class="col-auto">
                        <label class="sr-only" for="bet-sum">Sum</label>
                        <div class="input-group mb-2">
                            <div class="input-group-prepend">
                                <div class="input-group-text">$</div>
                            </div>
                            <input type="text" class="form-control" name="sum" id="bet-sum" value="10">
                        </div>
                    </div>

                </div>
                <div class="modal-sport-win">
                    Possible win: <span id="possible-win"></span>
                </div>
            </div>
            <input type="hidden" id="bet-match">
            <div class="modal-footer">
                <button class="modal-sport-place btn btn-success btn-block" type="button">place bet</button>
            </div>
        </div>
    </div>
</div>



<!--<script data-main="scripts/main" src="https://rawgit.com/radu-matei/websocket-manager/master/src/WebSocketManager.Client.TS/dist/WebSocketManager.js"></script>-->

